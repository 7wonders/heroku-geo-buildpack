#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast
set -e

# Debug
# set -x

# Clean up leaking environment
unset GIT_DIR

# Configuration
GEOS_VERSION="3.3.8"
GDAL_VERSION="1.10.0"
PROJ_VERSION="4.8.0"
S3_BUCKET="cyberdelia-geo-buildpack"

# Parameters
BUILD_DIR=$1
CACHE_DIR=$2

# Setup profile file
PROFILE_PATH="$BUILD_DIR/.profile.d/geo.sh"
mkdir -p $(dirname $PROFILE_PATH)

# Functions
function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function download_package() {
  name="$1"
  version="$2"
  location="$3"

  mkdir -p $location
  package="https://${S3_BUCKET}.s3.amazonaws.com/$name-$version.tgz"
  curl $package -s -o - | tar xzf - -C $location
}

function set-env (){
  echo "export $1=$2" >> $PROFILE_PATH
}

function set-default-env (){
  echo "export $1=\${$1:-$2}" >> $PROFILE_PATH
}

# Vendor directories
VENDORED_GEOS="vendor/geos"
VENDORED_GDAL="vendor/gdal"
VENDORED_PROJ="vendor/proj"

LD_LIBRARY_PATH="$BUILD_DIR/$VENDORED_GEOS/bin:$LD_LIBRARY_PATH"
echo "-----> Fetching and vendoring geos"
mkdir -p "$BUILD_DIR/$VENDORED_GEOS"
download_package "geos" "${GEOS_VERSION}" "${BUILD_DIR}/${VENDORED_GEOS}"

LD_LIBRARY_PATH="$BUILD_DIR/$VENDORED_GDAL/bin:$LD_LIBRARY_PATH"
echo "-----> Fetching and vendoring gdal"
mkdir -p "$BUILD_DIR/$VENDORED_GDAL"
download_package "gdal" "${GDAL_VERSION}" "${BUILD_DIR}/${VENDORED_GDAL}"

LD_LIBRARY_PATH="$BUILD_DIR/$VENDORED_PROJ/lib:$LD_LIBRARY_PATH"
echo "-----> Fetching and vendoring proj"
mkdir -p "$BUILD_DIR/$VENDORED_PROJ"
download_package "proj" "${PROJ_VERSION}" "${BUILD_DIR}/${VENDORED_PROJ}"

set-default-env LIBRARY_PATH $LD_LIBRARY_PATH
set-default-env LD_LIBRARY_PATH $LD_LIBRARY_PATH

echo "-----> vendoring geo libraries done"
